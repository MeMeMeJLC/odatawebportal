@model refwebportal.GamePlayer

@{
    ViewBag.Title = "Create";
}

@section Scripts {


    <script type="text/javascript">
        $(document).ready(function () {
            // Get a list of categories and a list of products of the first category.
            $.getJSON('/GamePlayer/GetTeams', null, function (data) {
                $.each(data, function () {
                    $('#team').append('<option value=' +
                      this.Id + '>' + this.Id + " " + this.TeamName + '</option>');
                });
                $.getJSON('/GamePlayer/GetPlayers', { intTeamID: $('#team').val() }, function (data) {
                    $.each(data, function () {
                        $('#PlayerId.form-control').append('<option value=' +
                          this.Id + '>' + this.Id + " " + this.LastName + ", " + this.FirstName + '</option>');

                    });
                }).fail(function (jqXHR, textStatus, errorThrown) {
                    alert('Error getting players 1!');
                });
            }).fail(function (jqXHR, textStatus, errorThrown) {
                alert('Error getting teams 2!');
            });

            // Dropdown list change event.
            $('#team.form-control').change(function () {
                $('#PlayerId.form-control option').remove();
                $.getJSON('/GamePlayer/GetPlayers', { intTeamID: $('#team').val() }, function (data) {
                    $.each(data, function () {
                        $('#PlayerId.form-control').append('<option value=' +
                          this.Id + '>' + this.LastName + ", " + this.FirstName + '</option>');
                        //window.alert(this.Id);
                    });
                }).fail(function (jqXHR, textStatus, errorThrown) {
                    alert('Error getting players 3!');
                });
            });


        });
       /* window.onload = function () {
            document.getElementById('send').onclick = function (e) {
                alert("playerid= " + document.getElementById("player").value + ", teamid = " + document.getElementById('team').value);
                return false;
            }
        }*/

    </script>
}

<h2>Create</h2>

<div class="form-group">
    <label for="team" class="control-label col-md-2">Team</label>

    <div class="col-md-10">
        <select class="form-control" id="team"></select>
    </div>
</div>
@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>GamePlayer</h4>
        <hr />

        <div class="form-group">
            <label for="PlayerId" class="control-label col-md-2" >Player</label>
            <div class="col-md-10">
                @Html.DropDownList("PlayerId", null, htmlAttributes: new { @class = "form-control" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.GameId, "GameId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("GameId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.GameId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsCaptain, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsCaptain)
                    @Html.ValidationMessageFor(model => model.IsCaptain, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SquadNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SquadNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SquadNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" id ="send" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
@Scripts.Render("~/bundles/jqueryval")



